l
}
aggregateFiles("help", 1:10)
aggregateFiles <- function(directory, id)
{
l <- list()
for (i in id)
{
l[[i]] <- paste(directory, "\\", i, ".csv", Collapse=None)
}
l
}
aggregateFiles("help", 1:10)
aggregateFiles <- function(directory, id)
{
l <- list()
for (i in id)
{
l[[i]] <- paste(directory, "\\", i, ".csv", collapse="")
}
l
}
aggregateFiles("help", 1:10)
paste("help", "\\", 1, ".csv")
paste("help", "\\", 1, ".csv" collapse=NA_character_)
paste("help", "\\", 1, ".csv", collapse=NA_character_)
paste("help", "\\", 1, ".csv", collapse="")
paste("help", "\\", 1, ".csv", collapse=" ")
paste("help", "\\", 1, ".csv", collapse="     ")
paste("help", "\\", 1, ".csv", collapse='')
paste("help", "\\", 1, ".csv", sep='')
paste("help", "\\", 1, ".csv", sep="")
help read.csv()
help read.csv
aggregateFiles <- function(directory, id)
{
l <- list()
for (i in id)
{
l[[i]] <- read.csv(file=(directory, "\\", i, ".csv", sep=""))
}
l
}
aggregateFiles <- function(directory, id)
{
l <- list()
for (i in id)
{
l[[i]] <- read.csv(file=paste(directory, "\\", i, ".csv", sep=""))
}
l
}
aggregateFiles("specdata", 1:10)
format(1)
format(1, widgh=3)
format(1, width=3)
format(1, digits=3)
formatC(1, width=3)
formatC(1, flag="0", width=3)
formatC(10, flag="0", width=3)
formatC(100, flag="0", width=3)
aggregateFiles <- function(directory, id)
{
dataList <- list()
for (i in id)
{
filePath = paste(
directory,
"\\",
formatC(i, flag = "0", width = 3),
".csv",
sep="")
dataList[[i]] <- read.csv(file=filePath)
}
dataList
}
aggregateFiles("specdata", 1:10)
topleve
toplevel <- null
toplevel <- NULL
toplevel == NUll
toplevel == NULL
True
TRUE
is.NUll(toplevel)
is.null(toplevel)
aggregateFiles <- function(directory, id)
{
topLevelDataFrame <- NULL
for (i in id)
{
filePath = paste(
directory,
"\\",
formatC(i, flag = "0", width = 3),
".csv",
sep="")
temp <- read.csv(file=filePath)
if(is.null(topLevelDataFrame))
{
topLevelDataFrame <- temp
}
else
{
topLevelDataFrame <-rbind(topLevelDataFrame, temp)
}
}
topLevelDataFrame
}
aggregateFiles("specdata", 1:5)
test <- aggregateFiles("specdata", 1:5)
View(test)
aggregateFiles <- function(directory, id)
{
topLevelDataFrame <- NULL
for (i in id)
{
filePath = paste(
directory,
"\\",
formatC(i, flag = "0", width = 3),
".csv",
sep="")
temp <- read.csv(file=filePath)
if(is.null(topLevelDataFrame))
{
topLevelDataFrame <- temp
}
else
{
topLevelDataFrame <-rbind(topLevelDataFrame, temp)
}
}
topLevelDataFrame
}
test <- aggregateFiles("specdata", 1:1)
View(test)
test
test["sulfate"]
test[!is.na(test)]
sulf <- test["sulfate"]
sulf
sulf[!is.na(sulf["Sulfate"])]
sulf[!is.na(sulf["Sulfate"],)]
sulf[!is.na(sulf["Sulfate"]),]
sulf[!is.na(sulf),]
sulf[[!is.na(sulf),]]
sulf[!is.na(sulf),]
aggregateFiles <- function(directory, id)
{
aggregatedData <- NULL
for (i in id)
{
filePath = paste(
directory,
"\\",
formatC(i, flag = "0", width = 3),
".csv",
sep="")
rawData <- read.csv(file=filePath)
if(is.null(aggregatedData))
{
aggregatedData <- rawData
}
else
{
aggregatedData <- rbind(aggregatedData, temp)
}
}
aggregatedData
}
pollutantmean <- function(directory, pullutant, id = 1:332)
{
data = aggregateFiles(directory, id)[pullutant]
cleanedData = data[!is.na(data),]
mean(cleanedData)
}
pollutantmean("specdata", "sulfate", 1:10)
aggregateFiles <- function(directory, id)
{
aggregatedData <- NULL
for (i in id)
{
filePath = paste(
directory,
"\\",
formatC(i, flag = "0", width = 3),
".csv",
sep="")
rawData <- read.csv(file=filePath)
if(is.null(aggregatedData))
{
aggregatedData <- rawData
}
else
{
aggregatedData <- rbind(aggregatedData, rawData)
}
}
aggregatedData
}
pollutantmean <- function(directory, pullutant, id = 1:332)
{
data = aggregateFiles(directory, id)[pullutant]
cleanedData = data[!is.na(data),]
mean(cleanedData)
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "nitrate", -23)
pollutantmean("specdata", "nitrate", 23)
comp <-complete.cases(test)
comp
comp[TRUE]
comp[TRUE]
comp.levels
comp.level''
levels(comp)
comp[comp == TRUE]
complete <- function(directory, id = 1:332)
{
data = aggregateFiles(directory, id)
comp <- complete.cases((data))
length(comp[comp == TRUE])
}
test
test[complete.cases((test))]
test[complete.cases((test)).]
test[complete.cases((test)),]
complete <- test[complete.cases((test)),]
factor(complete$ID)
fact <- factor(complete$ID)
summary(fact)
summary(fact)$1
summ <- summary(fact)
summ
summ[1]
one <- summ [1]
one
one <- summ [[1]]
one
summary.table()
summ
fact
levels(fact)
levels(fact)[1]
summ[[levels(fact)[1]]]
complete <- function(directory, id = 1:332)
{
data = aggregateFiles(directory, id)
comp <- data[complete.cases((data)),]
factorized = factor(comp)
rawIds = levels(factorized)
idSummary = summary(rawIds)
idVec <- vector()
countVec <- vector()
for (i in length(rawIds))
{
idVec[i] <- rawIds[[i]]
countVec[i] <- idSummary[[rawIds[[i]]]]
}
data.frame(idVec, countVec)
}
complete("specdata", 1)
complete("specdata", 1)
debugSource('C:/PersonalProjects/data_science/john_hopkins/projects/proj_1/JH_Proj_1/proj1.r')
complete("specdata", 1)
complete("specdata", 1)
idVec[i] <- rawIds[[i]]
aggregateFiles <- function(directory, id)
{
aggregatedData <- NULL
for (i in id)
{
filePath = paste(
directory,
"\\",
formatC(i, flag = "0", width = 3),
".csv",
sep="")
rawData <- read.csv(file=filePath)
if(is.null(aggregatedData))
{
aggregatedData <- rawData
}
else
{
aggregatedData <- rbind(aggregatedData, rawData)
}
}
aggregatedData
}
pollutantmean <- function(directory, pullutant, id = 1:332)
{
data = aggregateFiles(directory, id)[pullutant]
cleanedData = data[!is.na(data),]
mean(cleanedData)
}
complete <- function(directory, id = 1:332)
{
data = aggregateFiles(directory, id)
comp <- data[complete.cases((data)),]
factorized = factor(comp)
rawIds = levels(factorized)
idSummary = summary(rawIds)
idVec <- vector()
countVec <- vector()
for (i in length(rawIds))
{
idVec[i] <- rawIds[[i]]
countVec[i] <- idSummary[[rawIds[[i]]]]
}
data.frame(idVec, countVec)
}
complete("specdata", 1)
debugSource('C:/PersonalProjects/data_science/john_hopkins/projects/proj_1/JH_Proj_1/proj1.r')
complete("specdata", 1)
complete <- function(directory, id = 1:332)
{
data = aggregateFiles(directory, id)
comp <- data[complete.cases((data)),]
factorized = factor(comp[ID])
rawIds = levels(factorized)
idSummary = summary(rawIds)
idVec <- vector()
countVec <- vector()
for (i in length(rawIds))
{
idVec[i] <- rawIds[[i]]
countVec[i] <- idSummary[[rawIds[[i]]]]
}
data.frame(idVec, countVec)
}
complete("specdata", 1)
complete <- function(directory, id = 1:332)
{
data = aggregateFiles(directory, id)
comp <- data[complete.cases((data)),]
factorized = factor(comp$ID])
rawIds = levels(factorized)
idSummary = summary(rawIds)
idVec <- vector()
countVec <- vector()
for (i in length(rawIds))
{
idVec[i] <- rawIds[[i]]
countVec[i] <- idSummary[[rawIds[[i]]]]
}
data.frame(idVec, countVec)
}
complete <- function(directory, id = 1:332)
{
data = aggregateFiles(directory, id)
comp <- data[complete.cases((data)),]
factorized = factor(comp$ID)
rawIds = levels(factorized)
idSummary = summary(rawIds)
idVec <- vector()
countVec <- vector()
for (i in length(rawIds))
{
idVec[i] <- rawIds[[i]]
countVec[i] <- idSummary[[rawIds[[i]]]]
}
data.frame(idVec, countVec)
}
complete("specdata", 1)
debugSource('C:/PersonalProjects/data_science/john_hopkins/projects/proj_1/JH_Proj_1/proj1.r')
complete("specdata", 1)
idSummary
aggregateFiles("specdata", 1)
1 <- aggregateFiles("specdata", 1)
test <- aggregateFiles("specdata", 1)
comp <-test[complete.cases(test),]
comp
fact <- factor(comp$ID)
rawIds = levels(fact)
ids = summary(rawIds)
ids
ids <- summary(rawIds)
ids
ids <- summary(fact)
ids
complete <- function(directory, id = 1:332)
{
data <- aggregateFiles(directory, id)
comp <- data[complete.cases(data),]
factorized <- factor(comp$ID)
rawIds <-levels(factorized)
idSummary <- summary(factorized)
idVec <- vector()
countVec <- vector()
for (i in length(rawIds))
{
idVec[i] <- rawIds[[i]]
countVec[i] <- idSummary[[rawIds[[i]]]]
}
data.frame(idVec, countVec)
}
complete("specdata", 1)
complete <- function(directory, id = 1:332)
{
data <- aggregateFiles(directory, id)
comp <- data[complete.cases(data),]
factorized <- factor(comp$ID)
rawIds <-levels(factorized)
idSummary <- summary(factorized)
idVec <- vector()
countVec <- vector()
for (i in length(rawIds))
{
idVec[i] <- rawIds[[i]]
countVec[i] <- idSummary[[rawIds[[i]]]]
}
data.frame(idVec, countVec, colnames = c("id", "nobs"))
}
source('C:/PersonalProjects/data_science/john_hopkins/projects/proj_1/JH_Proj_1/proj1.r')
complete("specdata", 1)
complete <- function(directory, id = 1:332)
{
data <- aggregateFiles(directory, id)
comp <- data[complete.cases(data),]
factorized <- factor(comp$ID)
rawIds <-levels(factorized)
idSummary <- summary(factorized)
idVec <- vector()
countVec <- vector()
for (i in length(rawIds))
{
idVec[i] <- rawIds[[i]]
countVec[i] <- idSummary[[rawIds[[i]]]]
}
data.frame("id" = idVec, "nobs" = countVec)
}
complete("specdata", 1)
complete("specdata", 30:25)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 1:2)
source('C:/PersonalProjects/data_science/john_hopkins/projects/proj_1/JH_Proj_1/proj1.r')
complete("specdata", 1:2)
idSummary
rawIds
complete("specdata", 1:2)
complete("specdata", 1:2)
i
complete <- function(directory, id = 1:332)
{
data <- aggregateFiles(directory, id)
comp <- data[complete.cases(data),]
factorized <- factor(comp$ID)
rawIds <-levels(factorized)
idSummary <- summary(factorized)
idVec <- vector()
countVec <- vector()
for (i in length(rawIds))
{
idVec[i] <- 1:rawIds[[i]]
countVec[i] <- idSummary[[rawIds[[i]]]]
}
data.frame("id" = idVec, "nobs" = countVec)
}
complete <- function(directory, id = 1:332)
{
data <- aggregateFiles(directory, id)
comp <- data[complete.cases(data),]
factorized <- factor(comp$ID)
rawIds <-levels(factorized)
idSummary <- summary(factorized)
idVec <- vector()
countVec <- vector()
for (i in 1:length(rawIds))
{
idVec[i] <- rawIds[[i]]
countVec[i] <- idSummary[[rawIds[[i]]]]
}
data.frame("id" = idVec, "nobs" = countVec)
}
complete("specdata", 1:2)
complete("specdata", 30:25)
complete("specdata", c(2, 4, 8, 10, 12))
fact
summary(fact)
summary(fact)[[1]]
test <- comp[summary(fact)[[1]] > 0]
tet
test
test <- comp[summary(fact)[[1]] > 10000]
test
test <- comp[summary(fact)[[1]] > 10000,]
test
test <- comp[summary(fact)[[1]] > 0,]
test
corr <- function(directory, threshold = 0)
{
data <- aggregateFiles(directory, 1:332)
comp <- data[complete.cases(data),]
summ <- summary(factor(comp))
aboveThreshold = comp[summ[[comp]] >= threshold,]
corVec <- vector()
for (i in aboveThreshold)
{
corVec[i] = cor(aboveThreshold$sulfate, aboveThreshold$nitrate)
}
corVec
}
cr <- corr("specdata", 150)
cr
source('C:/PersonalProjects/data_science/john_hopkins/projects/proj_1/JH_Proj_1/proj1.r')
cr <- corr("specdata", 150)
cr <- corr("specdata", 150)
source('C:/PersonalProjects/data_science/john_hopkins/projects/proj_1/JH_Proj_1/proj1.r')
